{"ast":null,"code":"var _jsxFileName = \"/Users/jee/Desktop/j_project/emotiondiary/src/pages/New.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyHeader from \"./../components/MyHeader\";\nimport MyButton from \"./../components/MyButton\";\nimport DiaryEditor from \"../components/DiaryEditor\";\n\n//'오늘'의 날짜를 초기값으로 넣어주기 위해서 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStringDate = date => {\n  //[yyyy-mm-dd]형식\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  if (day < 10) {\n    day = `0${day}`;\n  }\n  return `${year}-${month}-${day}`;\n};\nconst New = () => {\n  _s();\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: \"Write new diary\",\n      leftchild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< Back\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"What is the date today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-date\",\n            value: date,\n            type: \"date\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(New, \"osAjjJ9ZCC8RKXmEqLqeptYR3jk=\", false, function () {\n  return [useNavigate];\n});\n_c = New;\nexport default New;\nvar _c;\n$RefreshReg$(_c, \"New\");","map":{"version":3,"names":["useState","useNavigate","MyHeader","MyButton","DiaryEditor","getStringDate","date","year","getFullYear","month","getMonth","day","getDate","New","setDate","Date","navigate","e","target","value"],"sources":["/Users/jee/Desktop/j_project/emotiondiary/src/pages/New.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport MyHeader from \"./../components/MyHeader\";\nimport MyButton from \"./../components/MyButton\";\nimport DiaryEditor from \"../components/DiaryEditor\";\n\n//'오늘'의 날짜를 초기값으로 넣어주기 위해서 \nconst getStringDate = (date) => {\n    //[yyyy-mm-dd]형식\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    if (month < 10) {\n        month = `0${month}`;\n    }\n    if (day < 10) {\n        day = `0${day}`;\n    }\n    return `${year}-${month}-${day}`;\n}\n\nconst New = () => {\n    const [date, setDate] = useState(getStringDate(new Date()));\n    const navigate = useNavigate();\n    return(\n        <div className=\"\">\n            <MyHeader \n            headText={\"Write new diary\"}\n            leftchild={\n                <MyButton \n                text={\"< Back\"}\n                onClick={() => navigate(-1)}\n                />\n                }\n            />\n            <div className=\"\">\n                <section>\n                    <h4>What is the date today?</h4>\n                    <div className=\"input-box\">\n                        <input \n                        className=\"input-date\"\n                        value={date} \n                        type=\"date\" \n                        onChange={(e)=>setDate(e.target.value)}\n                        />\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default New;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;;AAEnD;AAAA;AACA,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC5B;EACA,IAAIC,IAAI,GAAGD,IAAI,CAACE,WAAW,EAAE;EAC7B,IAAIC,KAAK,GAAGH,IAAI,CAACI,QAAQ,EAAE,GAAG,CAAC;EAC/B,IAAIC,GAAG,GAAGL,IAAI,CAACM,OAAO,EAAE;EACxB,IAAIH,KAAK,GAAG,EAAE,EAAE;IACZA,KAAK,GAAI,IAAGA,KAAM,EAAC;EACvB;EACA,IAAIE,GAAG,GAAG,EAAE,EAAE;IACVA,GAAG,GAAI,IAAGA,GAAI,EAAC;EACnB;EACA,OAAQ,GAAEJ,IAAK,IAAGE,KAAM,IAAGE,GAAI,EAAC;AACpC,CAAC;AAED,MAAME,GAAG,GAAG,MAAM;EAAA;EACd,MAAM,CAACP,IAAI,EAAEQ,OAAO,CAAC,GAAGd,QAAQ,CAACK,aAAa,CAAC,IAAIU,IAAI,EAAE,CAAC,CAAC;EAC3D,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,oBACI;IAAK,SAAS,EAAC,EAAE;IAAA,wBACb,QAAC,QAAQ;MACT,QAAQ,EAAE,iBAAkB;MAC5B,SAAS,eACL,QAAC,QAAQ;QACT,IAAI,EAAE,QAAS;QACf,OAAO,EAAE,MAAMe,QAAQ,CAAC,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAE3B;MAAA;MAAA;MAAA;IAAA,QACH,eACF;MAAK,SAAS,EAAC,EAAE;MAAA,uBACb;QAAA,wBACI;UAAA,UAAI;QAAuB;UAAA;UAAA;UAAA;QAAA,QAAK,eAChC;UAAK,SAAS,EAAC,WAAW;UAAA,uBACtB;YACA,SAAS,EAAC,YAAY;YACtB,KAAK,EAAEV,IAAK;YACZ,IAAI,EAAC,MAAM;YACX,QAAQ,EAAGW,CAAC,IAAGH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA;QACrC;UAAA;UAAA;UAAA;QAAA,QACA;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GA7BIN,GAAG;EAAA,QAEYZ,WAAW;AAAA;AAAA,KAF1BY,GAAG;AA+BT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}