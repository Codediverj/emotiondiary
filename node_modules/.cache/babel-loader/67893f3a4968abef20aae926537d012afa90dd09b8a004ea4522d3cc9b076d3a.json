{"ast":null,"code":"import _objectSpread from\"/Users/jee/Desktop/j_project/emotiondiary/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/jee/Desktop/j_project/emotiondiary/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import MyButton from\"./MyButton\";import DiaryItem from\"./DiaryItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var sortOptionList=[{value:\"latest\",name:\"latest\"},{value:\"oldest\",name:\"oldest\"}];var filterOptionList=[{value:\"all\",name:\"All\"},{value:\"good\",name:\"Good\"},{value:\"bad\",name:\"Bad\"}];//filtering\nvar ControlMenu=/*#__PURE__*/React.memo(function(_ref){var value=_ref.value,_onChange=_ref.onChange,optionList=_ref.optionList;return/*#__PURE__*/_jsx(\"select\",{className:\"ControlMenu\",value:value,onChange:function onChange(e){return _onChange(e.target.value);},children:optionList.map(function(it,idx){return/*#__PURE__*/_jsx(\"option\",{value:it.value,children:it.name},idx);})});});var DiaryList=function DiaryList(_ref2){var diaryList=_ref2.diaryList;var navigate=useNavigate();var _useState=useState(\"latest\"),_useState2=_slicedToArray(_useState,2),sortType=_useState2[0],setSortType=_useState2[1];var _useState3=useState(\"all\"),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];var getProcessedDiaryList=function getProcessedDiaryList(){var filterCallBack=function filterCallBack(item){if(filter===\"good\"){return parseInt(item.emotion)<=3;}else{return parseInt(item.emotion)>3;}};var compare=function compare(a,b){if(sortType===\"latest\"){return parseInt(b.date)-parseInt(a.date);}else{return parseInt(a.date)-parseInt(b.date);}};//DiaryList의 깊은복사\n//stringify (make string) => parse (JSON style)\nvar copyList=JSON.parse(JSON.stringify(diaryList));//filtering emotion num, if isn't all, bring matching items\nvar filteredList=filter===\"all\"?copyList:copyList.filter(function(it){return filterCallBack(it);});//1. filtering emotion => 2. lastest or oldest\nvar sortedList=filteredList.sort(compare);return sortedList;};return/*#__PURE__*/_jsxs(\"div\",{className:\"DiaryList\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menu_wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left_col\",children:[/*#__PURE__*/_jsx(ControlMenu,{value:sortType,onChange:setSortType,optionList:sortOptionList}),/*#__PURE__*/_jsx(ControlMenu,{value:filter,onChange:setFilter,optionList:filterOptionList})]}),/*#__PURE__*/_jsx(\"div\",{className:\"right_col\",children:/*#__PURE__*/_jsx(MyButton,{type:'positive',text:'Write new diary',onClick:function onClick(){return navigate('/new');}})})]}),getProcessedDiaryList().map(function(it){return/*#__PURE__*/_jsx(DiaryItem,_objectSpread({},it),it.id);})]});};DiaryList.defaultProps={diaryList:[]};export default DiaryList;","map":{"version":3,"names":["React","useState","useNavigate","MyButton","DiaryItem","sortOptionList","value","name","filterOptionList","ControlMenu","memo","onChange","optionList","e","target","map","it","idx","DiaryList","diaryList","navigate","sortType","setSortType","filter","setFilter","getProcessedDiaryList","filterCallBack","item","parseInt","emotion","compare","a","b","date","copyList","JSON","parse","stringify","filteredList","sortedList","sort","id","defaultProps"],"sources":["/Users/jee/Desktop/j_project/emotiondiary/src/components/DiaryList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\nimport DiaryItem from \"./DiaryItem\";\n\n\nconst sortOptionList = [\n    {value: \"latest\", name:\"latest\"},\n    {value: \"oldest\", name:\"oldest\"},\n];\nconst filterOptionList = [\n    {value: \"all\", name:\"All\"},\n    {value: \"good\", name:\"Good\"},\n    {value: \"bad\", name:\"Bad\"},\n];\n\n//filtering\nconst ControlMenu = React.memo(({ value, onChange, optionList }) => {\n    return (\n        <select className=\"ControlMenu\" value={value} onChange={(e) => onChange(e.target.value)}>\n            {optionList.map((it, idx) => (\n                <option key={idx} value={it.value}>\n                    {it.name}\n                </option>\n            ))}\n        </select>\n    );\n});\n\nconst DiaryList = ({ diaryList }) => {\n    const navigate = useNavigate();\n    const [sortType, setSortType] = useState(\"latest\");\n    const [filter, setFilter] = useState(\"all\");\n\n    const getProcessedDiaryList = () => {\n        const filterCallBack = (item) => {\n            if(filter === \"good\") {\n                return parseInt(item.emotion) <= 3;\n            }else {\n                return parseInt(item.emotion) > 3;\n            }\n        }\n\n        const compare = (a,b) => {\n            if(sortType === \"latest\"){\n                return parseInt(b.date) - parseInt(a.date);\n            } else {\n                return parseInt(a.date) - parseInt(b.date);\n            }\n        };\n        //DiaryList의 깊은복사\n        //stringify (make string) => parse (JSON style)\n        const copyList = JSON.parse(JSON.stringify(diaryList));\n        //filtering emotion num, if isn't all, bring matching items\n        const filteredList = filter === \"all\" ? copyList : copyList.filter((it) => filterCallBack(it));\n        //1. filtering emotion => 2. lastest or oldest\n        const sortedList = filteredList.sort(compare);\n        return sortedList; \n    }\n\n    return (\n        <div className=\"DiaryList\">\n            <div className=\"menu_wrapper\">\n                <div className=\"left_col\">\n                    <ControlMenu \n                        value={sortType}\n                        onChange={setSortType}\n                        optionList={sortOptionList}\n                    />\n                    <ControlMenu \n                        value={filter}\n                        onChange={setFilter}\n                        optionList={filterOptionList}\n                    />\n                </div>\n                <div className=\"right_col\">\n                    <MyButton \n                        type={'positive'} \n                        text={'Write new diary'} \n                        onClick={() => navigate('/new')}\n                    />\n                </div>\n            </div>\n            \n            {getProcessedDiaryList().map((it) => (\n                <DiaryItem key={it.id} {...it}/>\n            ))}\n        </div>\n    );\n};\nDiaryList.defaultProps = {\n    diaryList: [],\n};\nexport default DiaryList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}