{"ast":null,"code":"var _jsxFileName = \"/Users/jee/Desktop/j_project/emotiondiary/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport EmotionItem from \"./EmotionItem\";\n\n//Q2. 감정처리\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n  emotion_descript: \"So Good\"\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n  emotion_descript: \"Good\"\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n  emotion_descript: \"So so\"\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n  emotion_descript: \"Bad\"\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n  emotion_descript: \"So Bad\"\n}];\n\n//Q1. '오늘'의 날짜를 초기값으로 넣어주기 위해서 \nconst getStringDate = date => {\n  //[yyyy-mm-dd]형식\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  if (day < 10) {\n    day = `0${day}`;\n  }\n  return `${year}-${month}-${day}`;\n};\nconst DiaryEditor = () => {\n  _s();\n  //선택 감정 저장\n  const [emotion, setEmotion] = useState(3);\n  //작성날짜 지정\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const navigate = useNavigate();\n\n  //클릭한 감정을 prop으로 전달\n  const handleClickEmote = emotion => {\n    setEmotion(emotion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: \"Write new diary\",\n      leftchild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< Back\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryEditor\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"What is the date today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            value: date,\n            type: \"date\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Today's feeling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            ...it\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Today3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Today4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(DiaryEditor, \"cJ5kO0nSVL/EE5sPb/8fnQwr/ew=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["useState","useNavigate","MyHeader","MyButton","EmotionItem","emotionList","emotion_id","emotion_img","process","env","PUBLIC_URL","emotion_descript","getStringDate","date","year","getFullYear","month","getMonth","day","getDate","DiaryEditor","emotion","setEmotion","setDate","Date","navigate","handleClickEmote","e","target","value","map","it"],"sources":["/Users/jee/Desktop/j_project/emotiondiary/src/components/DiaryEditor.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport EmotionItem from \"./EmotionItem\";\n\n//Q2. 감정처리\nconst emotionList = [\n    {\n        emotion_id:1,\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n        emotion_descript: \"So Good\"\n    },\n    {\n        emotion_id:2,\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n        emotion_descript: \"Good\"\n    },\n    {\n        emotion_id:3,\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n        emotion_descript: \"So so\"\n    },\n    {\n        emotion_id:4,\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n        emotion_descript: \"Bad\"\n    },\n    {\n        emotion_id:5,\n        emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n        emotion_descript: \"So Bad\"\n    },\n]\n\n//Q1. '오늘'의 날짜를 초기값으로 넣어주기 위해서 \nconst getStringDate = (date) => {\n    //[yyyy-mm-dd]형식\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    if (month < 10) {\n        month = `0${month}`;\n    }\n    if (day < 10) {\n        day = `0${day}`;\n    }\n    return `${year}-${month}-${day}`;\n}\n\nconst DiaryEditor = () => {\n    //선택 감정 저장\n    const [emotion, setEmotion] = useState(3);\n    //작성날짜 지정\n    const [date, setDate] = useState(getStringDate(new Date()));\n    const navigate = useNavigate();\n\n    //클릭한 감정을 prop으로 전달\n    const handleClickEmote = (emotion) => {\n        setEmotion(emotion);\n    }\n\n    return(\n        <div className=\"\">\n            {/* Header */}\n            <MyHeader \n            headText={\"Write new diary\"}\n            leftchild={\n                <MyButton \n                text={\"< Back\"}\n                onClick={() => navigate(-1)}\n                />\n                }\n            />\n            <div className=\"DiaryEditor\">\n                {/* Q1 */}\n                <section>\n                    <h4>What is the date today?</h4>\n                    <div className=\"input_box\">\n                        <input \n                        className=\"input_date\"\n                        value={date} \n                        type=\"date\" \n                        onChange={(e)=>setDate(e.target.value)}\n                        />\n                    </div>\n                </section>\n                {/* Q2 */}\n                <section>\n                    <h4>Today's feeling</h4>\n                    <div className=\"input_box emotion_list_wrapper\">\n                        {emotionList.map((it) => (\n                            <EmotionItem key={it.emotion_id} {...it} />\n                        ))}\n                    </div>\n                </section>\n                {/* Q3 */}\n                <section>\n                    <h4>Today3</h4>\n                    <div className=\"\">\n                    </div>\n                </section>\n                {/* Q4 */}\n                <section>\n                    <h4>Today4</h4>\n                    <div className=\"\">\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n}\n\nexport default DiaryEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}