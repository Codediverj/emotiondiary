{"ast":null,"code":"var _jsxFileName = \"/Users/jee/Desktop/j_project/emotiondiary/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useRef } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Diary from './pages/Diary';\nimport New from './pages/New';\nimport Edit from './pages/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  let newState = [];\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.data;\n      }\n    case \"CREATE\":\n      {\n        const newItem = {\n          ...action.data\n        };\n        newState = [newItem, ...state];\n        break;\n      }\n    case \"REMOVE\":\n      {\n        newState = state.fillter(it => it.id !== action.targetId);\n        break;\n      }\n    case \"EDIT\":\n      {\n        newState = state.map(it => it.id === action.data.id ? {\n          ...action.data\n        } : it);\n        break;\n      }\n    default:\n      return state;\n  }\n  return newState;\n};\nconst dummyData = [{\n  id: 1,\n  emotion: 2,\n  content: \"today diary\",\n  date: 1675990962112\n}, {\n  id: 2,\n  emotion: 2,\n  content: \"today diary\",\n  date: 1675990962112\n}, {\n  id: 3,\n  emotion: 2,\n  content: \"today diary\",\n  date: 1675990962112\n}, {\n  id: 4,\n  emotion: 2,\n  content: \"today diary\",\n  date: 1675990962112\n}];\nexport const DiaryStateContext = /*#__PURE__*/React.createContext();\nexport const DiaryDispatchContext = /*#__PURE__*/React.createContext();\nfunction App() {\n  _s();\n  const [data, dispatch] = useReducer(reducer, dummyData);\n  const dataId = useRef(0);\n\n  //CREATE\n  const onCreate = (date, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion\n      }\n    });\n    dataId.current += 1;\n  };\n  //REMOVE\n  const onRemove = targetId => {\n    dispatch({\n      type: \"REMOVE\",\n      targetId\n    });\n  };\n  //EDIT\n  const onEdit = (targetId, date, content, emotion) => {\n    dispatch({\n      type: \"EDIT\",\n      data: {\n        id: targetId,\n        date: new Date(date).getTime(),\n        content,\n        emotion\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DiaryStateContext.Provider, {\n    value: data,\n    children: /*#__PURE__*/_jsxDEV(DiaryDispatchContext.Provider, {\n      value: {\n        onCreate,\n        onEdit,\n        onRemove\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/new\",\n              element: /*#__PURE__*/_jsxDEV(New, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/edit\",\n              element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/diary/:id\",\n              element: /*#__PURE__*/_jsxDEV(Diary, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"URoLQVjrymkt7P6iF0djjxUAxLQ=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useRef","BrowserRouter","Routes","Route","Home","Diary","New","Edit","reducer","state","action","newState","type","data","newItem","fillter","it","id","targetId","map","dummyData","emotion","content","date","DiaryStateContext","createContext","DiaryDispatchContext","App","dispatch","dataId","onCreate","current","Date","getTime","onRemove","onEdit"],"sources":["/Users/jee/Desktop/j_project/emotiondiary/src/App.js"],"sourcesContent":["import React, { useReducer, useRef } from \"react\";\n\nimport \"./App.css\";\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Diary from './pages/Diary';\nimport New from './pages/New';\nimport Edit from './pages/Edit';\n\nconst reducer = (state, action) => {\n    let newState = [];\n    switch (action.type) {\n        case \"INIT\": {\n            return action.data;\n        }\n        case \"CREATE\": {\n            const newItem = {\n                ...action.data,\n            };\n            newState = [newItem, ...state];\n            break;\n        }\n        case \"REMOVE\": {\n            newState = state.fillter((it) => it.id !== action.targetId);\n            break;\n        }\n        case \"EDIT\": {\n            newState = state.map((it) => \n                it.id === action.data.id ? { ...action.data } : it\n            );\n            break;\n        }\n        default:\n            return state;\n    }\n    return newState;\n};\n\nconst dummyData = [\n    {\n        id:1,\n        emotion:2,\n        content: \"today diary\",\n        date: 1675990962112,\n    },\n    {\n        id:2,\n        emotion:2,\n        content: \"today diary\",\n        date: 1675990962112,\n    },\n    {\n        id:3,\n        emotion:2,\n        content: \"today diary\",\n        date:1675990962112,\n    },\n    {\n        id:4,\n        emotion:2,\n        content: \"today diary\",\n        date: 1675990962112,\n    },\n];\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\n\n\nfunction App(){\n    const [data, dispatch] = useReducer(reducer, dummyData);\n    const dataId = useRef(0);\n\n    //CREATE\n    const onCreate = (date, content, emotion) => {\n        dispatch({\n            type: \"CREATE\",\n            data: {\n                id: dataId.current,\n                date: new Date(date).getTime(),\n                content,\n                emotion,\n            },\n        });\n        dataId.current += 1;\n    };\n    //REMOVE\n    const onRemove = (targetId) => {\n        dispatch({type: \"REMOVE\", targetId});\n    }\n    //EDIT\n    const onEdit = (targetId, date, content, emotion) => {\n        dispatch({\n            type: \"EDIT\",\n            data: {\n                id: targetId,\n                date: new Date(date).getTime(),\n                content,\n                emotion,\n            },\n        });\n    };\n\n\n    return(\n        <DiaryStateContext.Provider value={data}>\n        <DiaryDispatchContext.Provider value={{\n            onCreate,\n            onEdit,\n            onRemove,\n        }}>    \n        <BrowserRouter>\n            <div className=\"App\">\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"/new\" element={<New />} />\n                    <Route path=\"/edit\" element={<Edit />} />\n                    <Route path=\"/diary/:id\" element={<Diary />} />\n                </Routes>\n            </div>\n        </BrowserRouter>\n        </DiaryDispatchContext.Provider>\n        </DiaryStateContext.Provider>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}